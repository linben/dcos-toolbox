{
    "ROSTemplateFormatVersion" : "2015-09-01",
    "Description":"ALIYUN ROS Template",
    "Mappings":{
        "Parameters":{
            "VPCSubnetRange":{
                "default":"10.0.0.0/8"
            },
            "SlaveInstanceType":{
                "default":"ecs.c5.xlarge"
            },
            "MasterInstanceType":{
                "default":"ecs.c5.xlarge"
            },
            "StackCreationTimeout":{
                "default":"PT45M"
            },
            "PrivateSubnetRange":{
                "default":"10.0.0.0/22"
            },
            "PublicSlaveInstanceType":{
                "default":"ecs.c5.xlarge"
            },
            "SnatGateway":{
                "default":"ecs.t5-lc1m2.small"
            },
            "PublicSubnetRange":{
                "default":"10.0.4.0/22"
            }
        },
        "RegionToImage":{
            "cn-beijing":{
                "stable":"m-2zeh4rs0sudms27kqrkf"
            },
            "cn-hangzhou":{
                "stable":"m-0xi3ixx6h7ona2iczp1a"
            },
            "cn-qingdao":{
                "stable":"m-m5e2th9g3gpwlgl1iebr"
            },
            "cn-shanghai":{
                "stable":"m-uf6e1ke0c1nb7md85u5n"
            },
            "cn-shenzhen":{
                "stable":"m-wz9ggnkxp4noqcrkcdrz"
            },
            "cn-hongkong":{
                "stable":"m-j6cdljynpu4mey1lkbh5"
            },
            "us-west-1":{
                "stable":"m-rj9e1ke0c1nbc07p6873"
            },
            "us-east-1":{
                "stable":"m-0xi3ixx6h7ona2iczp1a"
            },
            "eu-central-1":{
                "stable":"m-gw873nxoe7jl797pw8ot"
            },
            "me-east-1":{
                "stable":"m-eb3d055dos8t0h53yz13"
            },
            "ap-northeast-1":{
                "stable":"m-6we6o1sqpzoceo4puce2"
            },
            "ap-southeast-1":{
                "stable":"m-t4ne1ke0c1nb9hg9zpbr"
            },
            "ap-southeast-2":{
                "stable":"m-p0w23p4uahksckdxogsh"
            }
        }
    },
    "Parameters":{
        "SlaveInstanceCount":{
            "Default":"5",
            "Description":"Required: Specify the number of private agent nodes or accept the default.",
            "Type":"Number"
        },
        "PublicSlaveInstanceCount":{
            "Default":"1",
            "Description":"Required: Specify the number of public agent nodes or accept the default.",
            "Type":"Number"
        },
        "RootLoginPassword":{
            "Type": "String",
            "NoEcho": true,
            "MaxLength": 41,
            "MinLength": 8,
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Description": "ECS root login password"
        },
        "AdminLocation":{
            "MaxLength":"18",
            "Default":"0.0.0.0/0",
            "Description":"Optional: Specify the IP range to whitelist for access to the admin zone. Must be a valid CIDR.",
            "Type":"String",
            "ConstraintDescription":"must be a valid CIDR.",
            "MinLength":"9"
        }
    },
    "Resources":{
        "Vpc":{
            "Properties":{
                "CidrBlock":{
                    "Fn::FindInMap":[
                        "Parameters",
                        "VPCSubnetRange",
                        "default"
                    ]
                }
            },
            "Type":"ALIYUN::ECS::VPC"
        },
        "PrivateSubnet":{
            "Properties":{
                "CidrBlock":{
                    "Fn::FindInMap":[
                        "Parameters",
                        "PrivateSubnetRange",
                        "default"
                    ]
                },
                "ZoneId":{
                    "Fn::Select":[
                        "0",
                        {
                            "Fn::GetAZs":{
                                "Ref":"ALIYUN::Region"
                            }
                        }
                    ]
                },
                "VpcId":{
                    "Ref":"Vpc"
                },
                "VSwitchName":"PrivateSubnet"
            },
            "Type":"ALIYUN::ECS::VSwitch"
        },
        "PublicSubnet":{
            "DependsOn": "PrivateSubnet",
            "Properties":{
                "CidrBlock":{
                    "Fn::FindInMap":[
                        "Parameters",
                        "PublicSubnetRange",
                        "default"
                    ]
                },
                "ZoneId":{
                    "Fn::Select":[
                        "1",
                        {
                            "Fn::GetAZs":{
                                "Ref":"ALIYUN::Region"
                            }
                        }
                    ]
                },
                "VpcId":{
                    "Ref":"Vpc"
                },
                "VSwitchName":"PublicSubnet"
            },
            "Type":"ALIYUN::ECS::VSwitch"
        },
        "AdminSecurityGroup":{
            "Properties":{
                "Description":"Enable admin access to servers",
                "SecurityGroupName": "AdminSecurityGroup",
                "SecurityGroupIngress":[
                    {
                    	"SourceCidrIp": {
                            "Ref":"AdminLocation"
                        },
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "22/22",
                        "Priority": 1
                    },
                    {
                    	"SourceCidrIp": {
                            "Ref":"AdminLocation"
                        },
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "80/80",
                        "Priority": 1
                    },
                    {
                    	"SourceCidrIp": {
                            "Ref":"AdminLocation"
                        },
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "443/443",
                        "Priority": 1
                    }
                ],
                "SecurityGroupEgress":[
                    {
                        "DestCidrIp": "0.0.0.0/0",
                        "IpProtocol": "all",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "-1/-1",
                        "Priority": 1
                    }
                ],
                "VpcId":{
                    "Ref":"Vpc"
                }
            },
            "Type":"ALIYUN::ECS::SecurityGroup"
        },
        "PublicSlaveSecurityGroup":{
            "Properties":{
                "Description":"Mesos Slaves Public",
                "SecurityGroupName":"PublicSlaveSecurityGroup",
                "SecurityGroupIngress":[
                    {
                    	"SourceCidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "1/21",
                        "Priority": 1
                    },
                    {
                    	"SourceCidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "23/5050",
                        "Priority": 1
                    },
                    {
                    	"SourceCidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "5052/32000",
                        "Priority": 1
                    },
                    {

                    	"SourceCidrIp": "0.0.0.0/0",
                        "IpProtocol": "udp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "1/21",
                        "Priority": 1
                    },
                    {
                    	"SourceCidrIp": "0.0.0.0/0",
                        "IpProtocol": "udp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "23/5050",
                        "Priority": 1
                    },
                    {
                    	"SourceCidrIp": "0.0.0.0/0",
                        "IpProtocol": "udp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "5052/32000",
                        "Priority": 1
                    }
                ],
                "SecurityGroupEgress":[
                    {
                        "DestCidrIp": "0.0.0.0/0",
                        "IpProtocol": "all",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "-1/-1",
                        "Priority": 1
                    }
                ],
                "VpcId":{
                    "Ref":"Vpc"
                }
            },
            "Type":"ALIYUN::ECS::SecurityGroup"
        },
        "MasterToPublicSlaveIngress":{
            "Properties":{
                "SecurityGroupId":{
                    "Ref":"PublicSlaveSecurityGroup"
                },
                "SourceGroupId": {
                    "Ref":"MasterSecurityGroup"
                },
                "IpProtocol": "all",
                "NicType": "intranet",
                "Policy": "accept",
                "PortRange": "-1/-1",
                "Priority": 1
            },
            "Type":"ALIYUN::ECS::SecurityGroupIngress"
        },
        "SlaveToPublicSlaveIngress":{
            "Properties":{
                "SecurityGroupId":{
                    "Ref":"PublicSlaveSecurityGroup"
                },
                "SourceGroupId": {
                    "Ref":"SlaveSecurityGroup"
                },
                "IpProtocol": "all",
                "NicType": "intranet",
                "Policy": "accept",
                "PortRange": "-1/-1",
                "Priority": 1
            },
            "Type":"ALIYUN::ECS::SecurityGroupIngress"
        },
        "SlaveSecurityGroup":{
            "Properties":{
                "Description":"Mesos Slaves",
                "SecurityGroupName":"SlaveSecurityGroup",
                "VpcId":{
                    "Ref":"Vpc"
                },
                "SecurityGroupEgress":[
                    {
                        "DestCidrIp": "0.0.0.0/0",
                        "IpProtocol": "all",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "-1/-1",
                        "Priority": 1
                    }
                ]
            },
            "Type":"ALIYUN::ECS::SecurityGroup"
        },
        "MasterToSlaveIngress":{
            "Properties":{
                "SecurityGroupId":{
                    "Ref":"SlaveSecurityGroup"
                },
                "SourceGroupId": {
                    "Ref":"MasterSecurityGroup"
                },
                "IpProtocol": "all",
                "NicType": "intranet",
                "Policy": "accept",
                "PortRange": "-1/-1",
                "Priority": 1
            },
            "Type":"ALIYUN::ECS::SecurityGroupIngress"
        },
        "PublicSlaveToSlaveIngress":{
            "Properties":{
                "SecurityGroupId":{
                    "Ref":"SlaveSecurityGroup"
                },
                "SourceGroupId": {
                    "Ref":"PublicSlaveSecurityGroup"
                },
                "IpProtocol": "all",
                "NicType": "intranet",
                "Policy": "accept",
                "PortRange": "-1/-1",
                "Priority": 1
            },
            "Type":"ALIYUN::ECS::SecurityGroupIngress"
        },
        "MasterSecurityGroup":{
            "Properties":{
                "Description":"Mesos Masters",
                "SecurityGroupName":"MasterSecurityGroup",
                "SecurityGroupIngress":[
                	{
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "5050/5050",
                        "Priority": 1,
                        "SourceCidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "80/80",
                        "Priority": 1,
                        "SourceCidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "443/443",
                        "Priority": 1,
                        "SourceCidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "8080/8080",
                        "Priority": 1,
                        "SourceCidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "8181/8181",
                        "Priority": 1,
                        "SourceCidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "2181/2181",
                        "Priority": 1,
                        "SourceCidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress":[
                    {
                        "DestCidrIp": "0.0.0.0/0",
                        "IpProtocol": "all",
                        "NicType": "intranet",
                        "Policy": "accept",
                        "PortRange": "-1/-1",
                        "Priority": 1
                    }
                ],
                "VpcId":{
                    "Ref":"Vpc"
                }
            },
            "Type":"ALIYUN::ECS::SecurityGroup"
        },
        "SlaveToMasterIngress":{
            "Properties":{
                "SecurityGroupId":{
                    "Ref":"MasterSecurityGroup"
                },
                "IpProtocol": "all",
                "NicType": "intranet",
                "Policy": "accept",
                "PortRange": "-1/-1",
                "Priority": 1,
                "SourceGroupId": {
                    "Ref":"SlaveSecurityGroup"
                }
            },
            "Type":"ALIYUN::ECS::SecurityGroupIngress"
        },
        "PublicSlaveToMasterIngress":{
            "Properties":{
                "SecurityGroupId":{
                    "Ref":"MasterSecurityGroup"
                },
                "IpProtocol": "all",
                "NicType": "intranet",
                "Policy": "accept",
                "PortRange": "-1/-1",
                "Priority": 1,
                "SourceGroupId": {
                    "Ref":"PublicSlaveSecurityGroup"
                }
            },
            "Type":"ALIYUN::ECS::SecurityGroupIngress"
        },
        "ElasticLoadBalancer":{
            "Properties":{
                "VSwitchId":{
                        "Ref":"PublicSubnet"
                },
                "VpcId": {
                    "Ref":"Vpc"
                },
                "LoadBalancerName":"ElasticLoadBalancer"
            },
            "Type":"ALIYUN::SLB::LoadBalancer",
            "DependsOn":"SnatGateway"
        },
        "ElasticLoadBalancerListener80":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "ElasticLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 80,
                "BackendServerPort": 80,
                "Protocol": "tcp",
                "HealthCheck": {
                    "Port": 5050,
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 5
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "ElasticLoadBalancerListener443":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "ElasticLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 443,
                "BackendServerPort": 443,
                "Protocol": "tcp",
                "HealthCheck": {
                    "Port": 5050,
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 5
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "PublicSlaveLoadBalancer":{
             "Properties":{
                "AddressType": "internet",
                "LoadBalancerName":"PublicSlaveLoadBalancer"
            },
            "Type":"ALIYUN::SLB::LoadBalancer",
            "DependsOn":"SnatGateway"
        },
        "PublicSlaveLoadBalancerListener80":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "PublicSlaveLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 80,
                "BackendServerPort": 80,
                "Protocol": "tcp",
                "HealthCheck": {
                    "Port": 9090,
                    "URI": "_haproxy_health_check",
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 2
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "PublicSlaveLoadBalancerListener443":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "PublicSlaveLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": "443",
                "BackendServerPort": 443,
                "Protocol": "tcp",
                "HealthCheck": {
                    "Port": 9090,
                    "URI": "_haproxy_health_check",
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 2
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "InternalMasterLoadBalancer":{
            "Properties":{
                "VSwitchId":{
                    "Ref":"PublicSubnet"
                },
                "VpcId": {
                    "Ref":"Vpc"
                },
                "LoadBalancerName":"InternalMasterLoadBalancer"
            },
            "Type":"ALIYUN::SLB::LoadBalancer"
        },
        "InternalMasterLoadBalancerListener5050":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "InternalMasterLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 5050,
                "BackendServerPort": 5050,
                "Protocol": "http",
                "HealthCheck": {
                    "Port": 5050,
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 5
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "InternalMasterLoadBalancerListener2181":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "InternalMasterLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 2181,
                "BackendServerPort": 2181,
                "Protocol": "tcp",
                "HealthCheck": {
                    "Port": 5050,
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 5
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "InternalMasterLoadBalancerListener8181":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "InternalMasterLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 8181,
                "BackendServerPort": 8181,
                "Protocol": "http",
                "HealthCheck": {
                    "Port": 5050,
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 5
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "InternalMasterLoadBalancerListener80":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "InternalMasterLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 80,
                "BackendServerPort": 80,
                "Protocol": "tcp",
                "HealthCheck": {
                    "Port": 5050,
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 5
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "InternalMasterLoadBalancerListener443":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "InternalMasterLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 443,
                "BackendServerPort": 443,
                "Protocol": "tcp",
                "HealthCheck": {
                    "Port": 5050,
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 5
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "InternalMasterLoadBalancerListener8080":{
            "Properties":{
                "LoadBalancerId":{
                    "Ref": "InternalMasterLoadBalancer"
                },
                "Bandwidth":1,
                "ListenerPort": 8080,
                "BackendServerPort": 8080,
                "Protocol": "http",
                "HealthCheck": {
                    "Port": 5050,
                    "HealthyThreshold": 2,
                    "UnhealthyThreshold": 2,
                    "Interval": 5,
                    "Timeout": 5
                },
                "Scheduler": "wrr"
            },
            "Type":"ALIYUN::SLB::Listener"
        },
        "SnatGateway": {
            "Properties": {
                "AllocatePublicIP": "true",
                "InternetChargeType": "PayByTraffic",
                "InternetMaxBandwidthIn": 100,
                "InternetMaxBandwidthOut": 50,
                "IoOptimized": "optimized",
                "InstanceType":{
                        "Fn::FindInMap":[
                            "Parameters",
                            "SnatGateway",
                            "default"
                        ]
                    },
                "ImageId": "centos_7_02_64_20G_alibase_20170818.vhd",
                "SystemDiskCategory": "cloud_ssd",
                "SystemDiskSize":80,
                "SecurityGroupId":{
                    "Ref":"SlaveSecurityGroup"
                },
                "VpcId": {
                    "Ref":"Vpc"
                },
                "VSwitchId": {
                    "Ref": "PrivateSubnet"
                },
                "MinAmount": 1,
                "MaxAmount": 1,
                "Password":{
                    "Ref":"RootLoginPassword"
                },
                "UserData": {
                    "Fn::Join": [
                        "",
                        [
                            "#!/bin/sh",
                            "\n",
                            "PostRouting=",
                            {
                                "Fn::FindInMap":[
                                    "Parameters",
                                    "PrivateSubnetRange",
                                    "default"
                                ]
                            },
                            "\n",
                            "SourceRouting=`ifconfig eth0|grep inet|awk '{print $2}'|tr -d 'addr:'`",
                            "\n",
                            "echo 'net.ipv4.ip_forward=1'>> /etc/sysctl.conf \n",
                            "sysctl -p \n",
                            "iptables -t nat -I POSTROUTING -s $PostRouting -j SNAT --to-source $SourceRouting \n",
                            "iptables-save\n"
                        ]
                    ]
                }
            },
            "Type": "ALIYUN::ECS::InstanceGroup"
        },
        "VRoute": {
            "DependsOn": ["PrivateSubnet", "PublicSubnet"],
            "Type": "ALIYUN::ECS::Route",
            "Properties": {
                "RouteId": {"Fn::GetAtt": ["Vpc", "VRouterId" ]},
                "RouteTableId": {"Fn::GetAtt": ["Vpc", "RouteTableId" ]},
                "DestinationCidrBlock": "0.0.0.0/0",
                "NextHopId": {
                  "Fn::Select": [
                    "0",
                    {
                      "Fn::GetAtt": [
                        "SnatGateway",
                        "InstanceIds"
                      ]
                    }
                  ]
                }
            }
        },
        "SlaveServerGroup":{
            "DependsOn": "SnatGateway",
            "Properties":{
                "AllocatePublicIP": false,
                "SecurityGroupId":{
                    "Ref":"SlaveSecurityGroup"
                },
                "IoOptimized": "optimized",
                "InstanceType":{
                    "Fn::FindInMap":[
                        "Parameters",
                        "SlaveInstanceType",
                        "default"
                    ]
                },
                "ImageId":{
                    "Fn::FindInMap":[
                        "RegionToImage",
                        {
                            "Ref":"ALIYUN::Region"
                        },
                        "stable"
                    ]
                },
                "SystemDiskCategory": "cloud_ssd",
                "SystemDiskSize":80,
                "VpcId": {
                    "Ref":"Vpc"
                },
                "VSwitchId": {
                    "Ref": "PrivateSubnet"
                },
                "Tags":[
                    {
                        "Value":"slave",
                        "Key":"role"
                    }
                ],
                "MinAmount": {
                    "Ref":"SlaveInstanceCount"
                },
                "MaxAmount":{
                    "Ref":"SlaveInstanceCount"
                },
                "Password":{
                    "Ref":"RootLoginPassword"
                },
				"UserData": {
                    "Fn::Join": [
                        "",
                        [
                            "#!/bin/sh",
                            "\n",
                            "mkdir -p /tmp/dcos && cd /tmp/dcos",
                            "\n",
                            "wget --retry-connrefused --tries=70 http://blin-dcos.oss-cn-shanghai.aliyuncs.com/1.12/dcos_install.sh",
                            "\n",
                            "bash dcos_install.sh slave\n"
                        ]
                    ]
                }
            },
            "Type": "ALIYUN::ECS::InstanceGroup"
        },
        "PublicSlaveServerGroup":{
            "Properties":{
                "SecurityGroupId":{
                    "Ref":"PublicSlaveSecurityGroup"
                },
                "IoOptimized": "optimized",
                "InstanceType":{
                    "Fn::FindInMap":[
                        "Parameters",
                        "PublicSlaveInstanceType",
                        "default"
                    ]
                },
                "ImageId":{
                    "Fn::FindInMap":[
                        "RegionToImage",
                        {
                            "Ref":"ALIYUN::Region"
                        },
                        "stable"
                    ]
                },
                "SystemDiskCategory": "cloud_ssd",
                "SystemDiskSize":80,
                "VpcId": {
                    "Ref":"Vpc"
                },
                "VSwitchId": {
                    "Ref": "PublicSubnet"
                },
                "Tags":[
                    {
                        "Value":"slave_public",
                        "Key":"role"
                    }
                ],
                "MinAmount": {
                    "Ref":"PublicSlaveInstanceCount"
                },
                "MaxAmount":{
                    "Ref":"PublicSlaveInstanceCount"
                },
                "Password":{
                    "Ref":"RootLoginPassword"
                },
				"UserData": {
                    "Fn::Join": [
                        "",
                        [
                            "#!/bin/sh",
                            "\n",
                            "mkdir -p /tmp/dcos && cd /tmp/dcos",
                            "\n",
                            "wget --retry-connrefused --tries=70 http://blin-dcos.oss-cn-shanghai.aliyuncs.com/1.12/dcos_install.sh",
                            "\n",
                            "bash dcos_install.sh slave_public\n"
                        ]
                    ]
                }
            },
            "Type": "ALIYUN::ECS::InstanceGroup"
        },
        "PublicServerGroupAttachPublicLoadBalancer":{
            "Type": "ALIYUN::SLB::BackendServerAttachment",
            "Properties": {
                "LoadBalancerId": {
                    "Ref":"PublicSlaveLoadBalancer"
                },
                "BackendServerList": {
                    "Fn::GetAtt": [
                        "PublicSlaveServerGroup",
                        "InstanceIds"
                    ]
                }
            }
        },
        "MasterServer":{
            "Properties":{
                "SecurityGroupId":{
                    "Ref":"MasterSecurityGroup"
                },
                "IoOptimized": "optimized",
                "InstanceType":{
                    "Fn::FindInMap":[
                        "Parameters",
                        "MasterInstanceType",
                        "default"
                    ]
                },
                "ImageId":{
                    "Fn::FindInMap":[
                        "RegionToImage",
                        {
                            "Ref":"ALIYUN::Region"
                        },
                        "stable"
                    ]
                },
                "SystemDiskCategory": "cloud_ssd",
                "SystemDiskSize":80,
                "VpcId": {
                    "Ref":"Vpc"
                },
                "VSwitchId": {
                    "Ref": "PublicSubnet"
                },
                "Tags":[
                    {
                        "Value":"master",
                        "Key":"role"
                    }
                ],
                "Password":{
                    "Ref":"RootLoginPassword"
                },
                "PrivateIpAddress": "10.0.4.1",
				"UserData": {
                    "Fn::Join": [
                        "",
                        [
                            "#!/bin/sh",
                            "\n",
                            "mkdir -p /tmp/dcos && cd /tmp/dcos",
                            "\n",
                            "wget --retry-connrefused --tries=70 http://blin-dcos.oss-cn-shanghai.aliyuncs.com/1.12/dcos_install.sh",
                            "\n",
                            "bash dcos_install.sh master\n"
                        ]
                    ]
                }
            },
            "Type": "ALIYUN::ECS::Instance"
        },
        "MasterServerGroupJoinSecurityGroup":{
            "Type": "ALIYUN::ECS::JoinSecurityGroup",
            "Properties": {
                "SecurityGroupId": {
                    "Ref":"AdminSecurityGroup"
                },
                "InstanceIdList": [
                    {
                        "Fn::GetAtt": [
                            "MasterServer",
                            "InstanceId"
                        ]
                    }
                ]
            }
        },
        "MasterServerGroupAttachElasticLoadBalancer":{
            "Type": "ALIYUN::SLB::BackendServerAttachment",
            "Properties": {
                "LoadBalancerId": {
                    "Ref":"ElasticLoadBalancer"
                },
                "BackendServerList": [
                    {
                        "Fn::GetAtt": [
                            "MasterServer",
                            "InstanceId"
                        ]
                    }
                ]
            }
        },
        "MasterServerGroupAttachMasterLoadBalancer":{
            "Type": "ALIYUN::SLB::BackendServerAttachment",
            "Properties": {
                "LoadBalancerId": {
                    "Ref":"InternalMasterLoadBalancer"
                },
                "BackendServerList": [
                    {
                        "Fn::GetAtt": [
                            "MasterServer",
                            "InstanceId"
                        ]
                    }
                ]
            }
        }
    },
    "Outputs":{
        "DnsAddress":{
            "Value":{
                "Fn::Join":[
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt":[
                                "ElasticLoadBalancer",
                                "IpAddress"
                            ]
                        }
                    ]
                ]
            },
            "Description":"Mesos Master"
        },
        "PublicSlaveDnsAddress":{
            "Value":{
                "Fn::Join":[
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt":[
                                "ElasticLoadBalancer",
                                "IpAddress"
                            ]
                        }
                    ]
                ]
            },
            "Description":"Public slaves"
        }
    }
}
